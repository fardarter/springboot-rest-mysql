apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-rest-mysql
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    app: spring-rest-mysql
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /spring-rest-mysql(/|$)(.*)
        backend:
          service:
            name: spring-rest-mysql
            port: 
              number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-rest-mysql
  annotations:
    reload/all: "true"
  labels:
    app: spring-rest-mysql
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: spring-rest-mysql
  template:
    metadata:
      labels:
        app: spring-rest-mysql
        waitId: spring-rest
    spec:
      initContainers:
      - name: wait-for-mysql
        image: "bitnami/kubectl:1.22"
        args:
          - "wait"
          - "--selector=waitId=mysql"
          - "--for=condition=ready"
          - "--timeout=10m"
          - "pods"
      containers:
      - name: spring-rest-mysql
        image: docker.mycompany.com/spring-rest-mysql:latest
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: spring-rest-configmap
        - configMapRef:
            name: spring-rest-configmap-migrated
            optional: true
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 3
          successThreshold: 1
          failureThreshold: 300
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 3
          successThreshold: 1
          failureThreshold: 300
        resources:
          requests:
            memory: "500Mi"
            cpu: "500m"
          limits: 
            memory: "750Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: spring-rest-mysql
spec:
  selector:
    app: spring-rest-mysql
  ports:
    - port: 8080
      targetPort: 8080